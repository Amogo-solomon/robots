{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"yNA+BeA,EA7BF,SAAHC,GAA2B,IAArBC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAEH,EAAFG,GACzB,OACIC,IAAAC,cAAA,OAAKC,UAAU,uDACXF,IAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BN,EAAE,cACjDC,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCmCLQ,EAtCE,SAAHV,GAAmB,IAAbW,EAAMX,EAANW,OAChB,OACIP,IAAAC,cAAA,WAEQM,EAAOC,IAAI,SAACC,EAAMC,GACd,OACIV,IAAAC,cAACN,EAAI,CACLgB,IAAKD,EACLX,GAAIQ,EAAOG,GAAGX,GACdF,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,YCA1Bc,EAbG,SAAHhB,GAAiBA,EAAXiB,YAA+B,IAAlBC,EAAYlB,EAAZkB,aAC9B,OACId,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAA,SACIC,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCPI,EARA,SAACC,GACZ,OACInB,IAAAC,cAAA,OAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCkBJC,EArBG,SAAAC,GACd,SAAAD,EAAYN,GAAO,IAAAQ,EAId,OAJcC,YAAAC,KAAAJ,IACfE,EAAAG,YAAAD,KAAAE,YAAAN,GAAAO,KAAAH,KAAMV,KACDc,MAAQ,CACVC,UAAU,GACZP,EAaJ,OAlBaQ,YAAAV,EAAAC,GAMbU,YAAAX,EAAA,EAAAd,IAAA,oBAAA0B,MAAA,SAEiBC,EAAOC,GACrBV,KAAKW,SAAS,CAAEN,UAAU,MAC7B,CAAAvB,IAAA,SAAA0B,MAAA,WAIG,OAAIR,KAAKI,MAAMC,SACJlC,IAAAC,cAAA,UAAI,oCAER4B,KAAKV,MAAMK,aACrBC,EAlBa,CAASgB,aCoDZC,SA/CN,SAAAhB,GACL,SAAAgB,IAAe,IAAAf,EAKd,OALcC,YAAAC,KAAAa,IACXf,EAAAG,YAAAD,KAAAE,YAAAW,GAAAV,KAAAH,QAiBRc,eAAiB,SAACC,GACdjB,EAAKa,SAAS,CAAC3B,YAAa+B,EAAMC,OAAOR,SAjBrCV,EAAKM,MAAQ,CACb1B,OAAQ,GACRM,YAAa,IAChBc,EAqCO,OA3CHQ,YAAAO,EAAAhB,GASTU,YAAAM,EAAA,EAAA/B,IAAA,oBAAA0B,MAAA,WACoB,IAAAS,EAAAjB,KAChBkB,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAGA,EAASC,SACzBF,KAAK,SAAAG,GAAK,OAAIL,EAAKN,SAAS,CAACjC,OAAQ4C,QAGzC,CAAAxC,IAAA,SAAA0B,MAAA,WAMY,IAAAe,EAC0BvB,KAAKI,MAA5B1B,EAAM6C,EAAN7C,OAAQM,EAAWuC,EAAXvC,YACVwC,EAAiB9C,EAAO+C,OAAO,SAAAC,GACjC,OAAOA,EAAM1D,KAAK2D,cAAcC,SAAS5C,EAAY2C,iBAGzD,OAAKjD,EAAOmD,OAIJ1D,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBF,IAAAC,cAACW,EAAS,CAACE,aAAce,KAAKc,iBAC9B3C,IAAAC,cAACiB,EAAM,KACHlB,IAAAC,cAACwB,EAAY,KACTzB,IAAAC,cAACK,EAAQ,CAACC,OAAQ8C,OAR3BrD,IAAAC,cAAA,UAAI,eAcXyC,EA3CH,CAASD,oBCGhBkB,IAASC,OAAO5D,IAAAC,cAACyC,EAAG,MAAKmB,SAASC,eAAe","file":"static/js/main.f0dccbb3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\n\r\n\r\n/* note: the html lookalike syntax below is the JSX ConvolverNode. that's why react is imported as seen above */\r\n/* const Card = (props) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 grow ma2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?200x200`} /> */\r\n            /* <img alt='robots' src='https://robohash.org/A81.png?set=set1?200x200' /> */\r\n           /*  <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n} */\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n/* import { robots } from './robots'; */ /* or use destructuring as below */\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n/* const CardList = ({ robots }) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return (\r\n        <Card \r\n         key={i} \r\n            id={robots[i].id}\r\n             name={robots[i].name}\r\n             email={robots[i].email}\r\n        />\r\n        );\r\n    })\r\n    return (\r\n        <div>\r\n           {cardComponent}\r\n         </div>\r\n    );\r\n} */\r\n\r\nexport default CardList; ","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots'\r\n            onChange={searchChange} \r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops. That is not good enough</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n    constructor()  {\r\n        super() /* this calls the constructors of components */\r\n        this.state = {\r\n        robots: [],\r\n        searchfield: ''\r\n    }\r\n}\r\n\r\n/* first stage for the mounting component lifecycle */\r\ncomponentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=> response.json())\r\n    .then(users => this.setState({robots: users}));\r\n  /* .then(users => {}); /* returning empty object */\r\n    \r\n}\r\n\r\n\r\nonSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value}) /* will filter the robot according to change search field and update to what we have*/\r\n}\r\n    render() {\r\n        const { robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        /* if (robots.length === 0) {  or*/\r\n        if (!robots.length) {\r\n            return <h1>Loading</h1>\r\n        } else { \r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );     \r\n        }\r\n           }\r\n        }\r\n   \r\n\r\nexport default App;\r\n\r\n/* NOTE: Our state is now passed down to cardlist as Props */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nimport 'tachyons';\n /* this syntax used destructuring because robots was not export defaulted */\n\n\n\n  ReactDOM.render(<App />, document.getElementById('root'));\n\n/* ReactDOM.render(\n                <div>\n                  <Card id={robots[0].id} name={robots[0].name} email={robots[0].email}/>\n                  <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\n                  <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/>\n                </div>\n  , document.getElementById('root')); */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}